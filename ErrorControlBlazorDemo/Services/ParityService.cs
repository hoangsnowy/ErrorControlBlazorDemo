
namespace ErrorControlBlazorDemo.Services;

public class ParityService
{
    public (bool ketQua, List<string> log) KiemTraMotChieu(string chuoi, bool odd)
    {
        var log = new List<string>();
        int count = 0;
        for (int i = 0; i < chuoi.Length; i++)
        {
            if (chuoi[i] == '1')
            {
                count++;
                log.Add($"V·ªã tr√≠ {i + 1}: '1' ‚Üí t·ªïng = {count}");
            }
            else
            {
                log.Add($"V·ªã tr√≠ {i + 1}: '0' ‚Üí t·ªïng gi·ªØ nguy√™n = {count}");
            }
        }

        log.Add($"T·ªïng s·ªë bit 1: {count}");
        bool hopLe = odd ? count % 2 == 1 : count % 2 == 0;
        log.Add($"Ki·ªÉu ki·ªÉm tra: {(odd ? "Odd Parity (l·∫ª)" : "Even Parity (ch·∫µn)")}");
        log.Add(hopLe ? "‚úÖ D·ªØ li·ªáu h·ª£p l·ªá." : "‚ùå D·ªØ li·ªáu l·ªói.");
        return (hopLe, log);
    }

    public List<string> KiemTraHaiChieu(string[] maTran)
    {
        var log = new List<string>();
        int rows = maTran.Length;
        int cols = maTran[0].Length;

        log.Add($"üìê Ma tr·∫≠n nh·∫≠n ƒë∆∞·ª£c: {rows} h√†ng x {cols} c·ªôt");

        int errorRow = -1, errorCol = -1;

        for (int i = 0; i < rows; i++)
        {
            int count = maTran[i].Count(c => c == '1');
            log.Add($"H√†ng {i + 1} c√≥ {count} bit 1 ‚Üí {(count % 2 == 0 ? "OK" : "L·ªói")}");
            if (count % 2 != 0) errorRow = i;
        }

        for (int j = 0; j < cols; j++)
        {
            int count = 0;
            for (int i = 0; i < rows; i++)
                if (maTran[i][j] == '1') count++;

            log.Add($"C·ªôt {j + 1} c√≥ {count} bit 1 ‚Üí {(count % 2 == 0 ? "OK" : "L·ªói")}");
            if (count % 2 != 0) errorCol = j;
        }

        if (errorRow >= 0 && errorCol >= 0)
            log.Add($"‚ùó L·ªói ph√°t hi·ªán t·∫°i: H√†ng {errorRow + 1}, C·ªôt {errorCol + 1}");
        else if (errorRow >= 0 || errorCol >= 0)
            log.Add("‚ö†Ô∏è C√≥ l·ªói nh∆∞ng kh√¥ng x√°c ƒë·ªãnh ch√≠nh x√°c v·ªã tr√≠.");
        else
            log.Add("‚úÖ Kh√¥ng ph√°t hi·ªán l·ªói.");

        return log;
    }
}
